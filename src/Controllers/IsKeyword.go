package syntax

func _IsKeyword(value string) bool {
	switch value {
	case "async":
		return true
	case "await":
		return true
	case "as":
		return true
	case "any":
		return true
	case "break":
		return true
	case "case":
		return true
	case "class":
		return true
	case "continue":
		return true
	case "if":
		return true
	case "instanceof":
		return true
	case "else":
		return true
	case "var":
		return true
	case "number":
		return true
	case "string":
		return true
	case "switch":
		return true
	case "get":
		return true
	case "module":
		return true
	case "this":
		return true
	case "throw":
		return true
	case "typeof":
		return true
	case "type":
		return true
	case "public":
		return true
	case "private":
		return true
	case "enum":
		return true
	case "export":
		return true
	case "finally":
		return true
	case "for":
		return true
	case "while":
		return true
	case "void":
		return true
	case "null":
		return true
	case "super":
		return true
	case "new":
		return true
	case "in":
		return true
	case "return":
		return true
	case "true":
		return true
	case "false":
		return true
	case "extends":
		return true
	case "static":
		return true
	case "let":
		return true
	case "package":
		return true
	case "implements":
		return true
	case "interface":
		return true
	case "function":
		return true
	case "try":
		return true
	case "yield":
		return true
	case "const":
		return true
	case "do":
		return true
	case "catch":
		return true
	default:
		return false
	}
}
